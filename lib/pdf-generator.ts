import jsPDF from "jspdf"
import autoTable from "jspdf-autotable"

interface OrderItem {
  id: number
  name: string
  price: number
  quantity: number
  jetons?: string
}

interface Order {
  id: string
  order_code: string
  customer_name: string
  items: OrderItem[]
  total: number
  payment_method: "cash" | "payconic"
  timestamp: Date
}

export function generateOrdersPDF(orders: Order[]) {
  const doc = new jsPDF()

  // Header
  doc.setFontSize(20)
  doc.text("Mosselweekend - Order History", 20, 20)

  doc.setFontSize(12)
  doc.text(`Generated: ${new Date().toLocaleString("nl-BE")}`, 20, 30)
  doc.text(`Total Orders: ${orders.length}`, 20, 40)

  const totalRevenue = orders.reduce((sum, order) => sum + order.total, 0)
  doc.text(`Total Revenue: €${totalRevenue.toFixed(2)}`, 20, 50)

  // Summary statistics
  const cashOrders = orders.filter((o) => o.payment_method === "cash").length
  const payconicOrders = orders.filter((o) => o.payment_method === "payconic").length

  doc.text(`Cash Payments: ${cashOrders}`, 20, 60)
  doc.text(`Payconic Payments: ${payconicOrders}`, 20, 70)

  // Table data
  const tableData = orders.map((order) => [
    order.order_code || "Legacy",
    order.customer_name,
    order.timestamp instanceof Date
      ? order.timestamp.toLocaleString("nl-BE")
      : new Date(order.timestamp).toLocaleString("nl-BE"),
    order.payment_method === "cash" ? "Cash" : "Payconic",
    `€${order.total.toFixed(2)}`,
    order.items.map((item) => `${item.quantity}x ${item.name}`).join(", "),
  ])

  autoTable(doc, {
    head: [["Order Code", "Customer", "Date/Time", "Payment", "Total", "Items"]],
    body: tableData,
    startY: 85,
    styles: {
      fontSize: 8,
      cellPadding: 2,
    },
    columnStyles: {
      0: { cellWidth: 25 },
      1: { cellWidth: 25 },
      2: { cellWidth: 30 },
      3: { cellWidth: 20 },
      4: { cellWidth: 20 },
      5: { cellWidth: 60 },
    },
    margin: { left: 10, right: 10 },
    headStyles: {
      fillColor: [136, 0, 0], // Dark red header matching the theme
      textColor: 255,
      fontStyle: "bold",
    },
    alternateRowStyles: {
      fillColor: [245, 245, 245],
    },
  })

  // Footer with generation info
  const pageCount = doc.getNumberOfPages()
  for (let i = 1; i <= pageCount; i++) {
    doc.setPage(i)
    doc.setFontSize(8)
    doc.text(
      `Page ${i} of ${pageCount} - Generated by Mosselweekend Kassasysteem`,
      20,
      doc.internal.pageSize.height - 10,
    )
  }

  // Save the PDF
  doc.save(`mosselweekend-orders-${new Date().toISOString().split("T")[0]}.pdf`)
}
